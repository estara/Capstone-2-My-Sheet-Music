1. What tech stack will you use for your final project? We recommend that you use
React and Node for this project, however if you are extremely interested in
becoming a Python developer you are welcome to use Python/Flask for this
project.
React and Node

2. Is the front-end UI or the back-end going to be the focus of your project? Or are
you going to make an evenly focused full-stack application?
Back-end will be the focus.

3. Will this be a website? A mobile app? Something else?
A website

4. What goal will your project be designed to achieve?
Handling their sheet music library is a problem every musician faces. It is easy to lose track of what you do/don't have, if something has been loaned out, etc. This will be designed to make it easy to streamline the process.

5. What kind of users will visit your app? In other words, what is the demographic of
your users?
Anyone who has ever been involved with music, although the most likely users are professional musicians. The estimated workforce of musicians in the US is 138k people, has an average age of 47 and an average salary of ~$33k. They average 64% male and 36% female. ~74% are white, 13% are black, 3.8% are Asian.

6. What data do you plan on using? How are you planning on collecting your data?
You may have not picked your actual API yet, which is fine, just outline what kind
of data you would like it to contain. You are welcome to create your own API and
populate it with data. If you are using a Python/Flask stack are required to create
your own API.
I will be using the Open Opus API for my initial database. It has information about a large number of classical music compositions. The app will also have its own that users can add to to allow it to become more useful over time.

7. In brief, outline your approach to creating your project (knowing that you may not
know everything in advance and that these details might change later). Answer
questions like the ones below, but feel free to add more information:

a. What does your database schema look like?
see db-schema.pdf

b. What kinds of issues might you run into with your API? This is especially
important if you are creating your own API, web scraping produces
notoriously messy data.

c. Is there any sensitive information you need to secure?
User emails and passwords

d. What functionality will your app include?
Users can create an account which will allow them to mark what compositions they own, whether it is a physical or digital copy of the sheet music, whether they have played it, whether it has been loaned out, as well as a notes field for miscellaneous data.

e. What will the user flow look like?
see user-flow.pdf

f. What are your stretch goals?
My stretch goals are:
To provide suggestions of common repertoire items that most musicians will have in their library so they don't need to search for them.
To sort compositions by instrument.
